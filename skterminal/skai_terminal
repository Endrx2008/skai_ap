#!/bin/bash
clear

HISTORY_FILE="$HOME/.sk_history"
touch "$HISTORY_FILE"
HISTFILE="$HISTORY_FILE"
HISTSIZE=1000
HISTFILESIZE=2000

base_prompt="Scrivi solo un comando, nessuna descrizione, nessun testo esterno, solo la traduzione della domanda in uno o una sequenza di comandi shell:"

# Carica la cronologia
history -r "$HISTORY_FILE"

while true; do
  echo -e "\033[1;34m┌──(Sk_ai ㉿terminal)-\033[0m\033[1;36m[Inserisci la tua richiesta]\033[0m"
  # Usa readline (freccette abilitate)
  read -re -p $'\033[1;34m└─$\033[0m ' prompt

  # Se input vuoto
  if [ -z "$prompt" ]; then
    echo -e "\033[1;31m[!] Nessun input fornito.\033[0m"
    continue
  fi

  # Se richiesta di uscita
  if [[ "$prompt" == "exit" ]]; then
    echo -e "\033[1;31m[*] Uscita dallo script.\033[0m"
    exit 0
  fi

  # Salva il prompt nella cronologia
  history -s "$prompt"
  echo "$prompt" >> "$HISTORY_FILE"

  # Controlla se è un comando shell valido
  comando_base=$(echo "$prompt" | awk '{print $1}')
  if type -t "$comando_base" >/dev/null 2>&1; then
    eval "$prompt"
    continue
  fi

  # Se non è un comando, invia all'AI
  full_prompt="$base_prompt $prompt"
  comando=$(echo "$full_prompt" | ollama run llama)
  echo -e "\n\033[1;36m[+] Comando suggerito:\033[0m $comando" | tee /tmp/ai_response

  # Conferma
  while true; do
    echo -e "\033[1;33m┌──(Sk_ai ㉿skai)-[Eseguire il comando? y/n/s (spiega)]:\033[0m"
    read -rp $'\033[1;33m└─>\033[0m ' scelta
    scelta=${scelta,,}

    case "$scelta" in
      y|"")
        echo -e "\033[1;32m[+] Eseguendo: $comando\033[0m"
        eval "$comando"
        echo "$comando" >> "$HISTORY_FILE"
        break
        ;;
      n)
        echo -e "\033[1;31m[-] Comando annullato.\033[0m"
        break
        ;;
      s)
        spiegazione="Spiega dettagliatamente cosa fa il seguente comando shell: $comando"
        echo "$spiegazione" | ollama run llama
        ;;
      *)
        echo -e "\033[1;35m[!] Scelta non valida. Riprova.\033[0m"
        ;;
    esac
  done

  echo
done
